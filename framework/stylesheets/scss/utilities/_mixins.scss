// ==========================================================================
// Mixins
// ==========================================================================
// Special Commands: SCSS_LINT
// scss-lint:disable StringQuotes, Comment, FinalNewline, NameFormat, ColorKeyword, ColorVariable, SelectorFormat, ElsePlacement

// Element Mixin
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

// Modifier Mixin
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// Media Queries
@mixin media-q($break) {
  @if $break == 'small' {
    @media (min-width: $breakpoint-sm) and (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $break == 'medium' {
    @media (min-width: $breakpoint-md + 1) {
      @content;
    }
  } @else if $break == 'large' {
    @media (min-width: $breakpoint-lg) {
      @content
    }
  } @else {
    @error '"#{$break}" is not a valid breakpoint value. Please re-assess and enter correct value (e.g. "small", "medium" or "large")';
  }
}

// Image Replacement
@mixin img-replace($img-name, $w, $h, $disp: 'block', $rep: 'no-repeat') {
  display: #{$disp};
  height: $h;
  width: $w;
  background: image-url('#{$img-name}') #{$rep};
}

// Adjacent Sibling Mixin
@mixin doubly($type: 'margin-left', $margin-amt: 1em) {
  & + & {
    #{$type}: $margin-amt;
    @content;
  }
}

// Generate color modifier classes
@mixin btn-bg($color-map) {
  @each $theme, $color in $color-map {
    &--#{$theme} {
      background-color: $color;
    }
  }
}

// Generate ::before or ::after pseudo-element shapes
@mixin p-el($el-name, $h: 'null', $w: 'null') {
  @if $el-name == 'before' or $el-name == 'after' {
    &::#{$el-name} {
      @extend %pseudos;
      width: $w;
      height: $h;
      @content;
    }
  } @else {
    @error '"#{$el-name}" is not a valid pseudo element.';
  }
}

// Grid columns
@mixin g-columns {
  @for $i from 1 through $g-col-c {
    $con: g-context($g-col-w, $g-col-c, $g-gutter-w) !global;
    $tar: ($g-col-w * $i) + ($g-gutter-w * ($i - 1));

    // generate column modifier classes
    &--#{$i} {
      width: percentage($tar / $con);
    }
  }
}

// Color Stops
@mixin colorstop-lg($cs-1, $cs-2, $dir) { // linear gradient color-stop
  background: $cs-1;
  background: linear-gradient(to $dir, $cs-1, $cs-2);
}